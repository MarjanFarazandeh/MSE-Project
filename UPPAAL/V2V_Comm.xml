<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
int[0,1] req1,req2,occupied1,occupied2;
chan recieved,sending;</declaration>
	<template>
		<name x="5" y="5">V2VComm</name>
		<parameter>int[0,1] &amp;req_self, int[0,1] &amp;req_other, int[0,1] &amp;occupied_self, int[0,1] &amp;occupied_other, const int[1,2] priority_self, const int[1,2] priority_other</parameter>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id0" x="-306" y="-51">
			<name x="-316" y="-85">idle</name>
			<committed/>
		</location>
		<location id="id1" x="34" y="-51">
			<name x="-8" y="-85">request_sending</name>
			<committed/>
		</location>
		<location id="id2" x="-306" y="246">
			<name x="-391" y="238">recieve</name>
			<committed/>
		</location>
		<location id="id3" x="34" y="246">
			<name x="60" y="221">send</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-289" y="68">req_self==1</label>
			<label kind="synchronisation" x="-272" y="51">recieved!</label>
			<nail x="-280" y="144"/>
			<nail x="-76" y="-25"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-178" y="136">sending?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-442" y="119">sending?</label>
			<nail x="-382" y="0"/>
			<nail x="-382" y="195"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="-365" y="34">req_self==0</label>
			<label kind="synchronisation" x="-365" y="51">recieved!</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-238" y="-17">recieved?</label>
			<label kind="assignment" x="-263" y="-34">req_self:=0, occupied_self:=0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<nail x="119" y="246"/>
			<nail x="119" y="323"/>
			<nail x="34" y="323"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="42" y="85">(priority_self&gt;priority_other &amp; occupied_other==0) | (req_other==0)</label>
			<label kind="synchronisation" x="51" y="119">sending!</label>
			<label kind="assignment" x="42" y="102">occupied_self:=1</label>
			<nail x="34" y="25"/>
			<nail x="34" y="187"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-187" y="-93">req_self:=1</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

Vehicle1 = V2VComm(req1,req2,occupied1,occupied2,1,2);
Vehicle2 = V2VComm(req2,req1,occupied2,occupied1,2,1);
// List one or more processes to be composed into a system.
system Vehicle1, Vehicle2;
    </system>
	<queries>
		<query>
			<formula>A[] not(Vehicle1.send and not(Vehicle2.recieve))</formula>
			<comment>Vehicle1 -&gt; Vehicle2 Communication is always guaranteed</comment>
		</query>
		<query>
			<formula>A[] not(Vehicle2.send and not(Vehicle1.recieve))</formula>
			<comment>Vehicle2 -&gt; Vehicle1 Communication is always guranteed</comment>
		</query>
		<query>
			<formula>A[] not(Vehicle1.send and Vehicle2.send)</formula>
			<comment>It is not possible that both Vehicles are sending at the same time</comment>
		</query>
		<query>
			<formula>A[] not(Vehicle1.recieve and Vehicle2.recieve)</formula>
			<comment>It is not possible that both Vehicles are recieving at the same time</comment>
		</query>
	</queries>
</nta>
